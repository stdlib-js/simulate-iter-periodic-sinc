{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert-is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isEven = require( '@stdlib/math-base-assert-is-even' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\nvar sinpi = require( '@stdlib/math-base-special-sinpi' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a periodic sinc waveform.\n*\n* ## Method\n*\n* -   The periodic sinc function, or Dirichlet function, is defined as\n*\n*     ```tex\n*     D_N(x; A) = \\begin{cases}\n*     A \\cdot \\frac{\\sin(Nx/2)}{N\\sin(x/2)} & x \\neq 2\\pi k\\ \\textrm{for} k = 0, \\pm 1, \\pm 2, \\pm 3, \\ldots \\\\\n*     A \\cdot (-1)^{k(N-1)} & x = 2\\pi k\\ \\textrm{for} k = 0, \\pm 1, \\pm 2, \\pm 3, \\ldots\n*     \\end{cases}\n*     ```\n*\n*     where, for odd \\\\( N \\\\), the waveform period is \\\\( 2\\pi \\\\), and, for even \\\\( N \\\\), the waveform period is \\\\( 4\\pi \\\\).\n*\n* -   In order to evaluate the periodic sinc function in terms of an iteration number \\\\( t \\\\) and a specified period (period \\\\( \\tau \\\\)), rather than radians, for odd \\\\( N \\\\), we define\n*\n*     ```tex\n*     x = \\frac{2\\pi(t-\\varphi)}{\\tau}\n*     ```\n*\n*     and, for even \\\\( N \\\\), we define\n*\n*     ```tex\n*     x = \\frac{4\\pi(t-\\varphi)}{\\tau}\n*     ```\n*\n*     and substitute accordingly.\n*\n* @param {PositiveInteger} n - order\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterPeriodicSinc( 7 );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterPeriodicSinc( n, options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar sgn;\n\tvar hwf;\n\tvar hw;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\topts = {\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t ϵ [0,τ]\n\t}\n\tif ( isEven( n ) ) {\n\t\tif ( opts.offset >= 0 ) {\n\t\t\tsgn = -1.0;\n\t\t} else {\n\t\t\tsgn = 1.0;\n\t\t}\n\t\t// Note: when `n` is even, the waveform period (in radians) is 4π, so we need to adjust the \"period\" parameter to ensure that the waveform repeats within the specified number of iterations:\n\t\thw = opts.period / 2;\n\t\thwf = floor( hw ); // note: τ could be an odd number; in which case, negative peaks happen \"between\" two iterations (t%τ and t%(τ+1))\n\t\ts = n / hw;\n\t} else {\n\t\ts = n / opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', ( sgn === void 0 ) ? next2 : next1 );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\tif ( t === 0 || t === hw ) {\n\t\t\tsgn *= -1.0;\n\t\t\tv = sgn * opts.amplitude;\n\t\t} else {\n\t\t\tif ( t === hwf ) {\n\t\t\t\t// We just passed a negative peak, so we need flip the sign in order to ensure that the waveform at `t%τ=0` is the correct sign:\n\t\t\t\tsgn *= -1.0;\n\t\t\t}\n\t\t\tv = opts.amplitude * sinpi(s*t) / ( n*sinpi(t/hw) );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\tif ( t === 0 ) {\n\t\t\tv = opts.amplitude;\n\t\t} else {\n\t\t\tv = opts.amplitude * sinpi(s*t) / ( n*sinpi(t/opts.period) );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPeriodicSinc( n, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPeriodicSinc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a periodic sinc waveform.\n*\n* @module @stdlib/simulate-iter-periodic-sinc\n*\n* @example\n* var iterPeriodicSinc = require( '@stdlib/simulate-iter-periodic-sinc' );\n*\n* var iter = iterPeriodicSinc( 7 );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n"],"names":["isPlainObject","require$$0","hasOwnProp","require$$1","isInteger","require$$2","isPrimitive","isPositiveInteger","require$$3","isNonNegativeInteger","require$$4","isNonNegativeNumber","require$$5","format","require$$6","validate_1","opts","options","period","TypeError","amplitude","offset","iter","setReadOnly","isEven","iteratorSymbol","sinpi","floor","validate","require$$7","main","iterPeriodicSinc","n","FLG","err","sgn","hwf","hw","t","s","i","arguments","length","next2","next1","end","factory","v","done","value","lib"],"mappings":";;glCAsBA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAYC,EAAuCC,YACnDC,EAAoBC,EAAgDF,YACpEG,EAAuBC,EAAmDJ,YAC1EK,EAAsBC,EAAkDN,YACxEO,EAASC,EA6Db,IAAAC,EAlCA,SAAmBC,EAAMC,GACxB,OAAMjB,EAAeiB,GAGhBf,EAAYe,EAAS,YACzBD,EAAKE,OAASD,EAAQC,QAChBX,EAAmBU,EAAQC,SACzB,IAAIC,UAAWN,EAAQ,yEAA0E,SAAUI,EAAQC,SAGvHhB,EAAYe,EAAS,eACzBD,EAAKI,UAAYH,EAAQG,WACnBT,EAAqBM,EAAQG,YAC3B,IAAID,UAAWN,EAAQ,0EAA2E,YAAaI,EAAQG,YAG3HlB,EAAYe,EAAS,YACzBD,EAAKK,OAASJ,EAAQI,QAChBjB,EAAWa,EAAQI,SACjB,IAAIF,UAAWN,EAAQ,gEAAiE,SAAUI,EAAQI,SAG9GnB,EAAYe,EAAS,UACzBD,EAAKM,KAAOL,EAAQK,MACdb,EAAsBQ,EAAQK,OAC5B,IAAIH,UAAWN,EAAQ,2EAA4E,OAAQI,EAAQK,OAGrH,KA1BC,IAAIH,UAAWN,EAAQ,qEAAsEI,KCnClGM,EAActB,EACdM,EAAoBJ,EAAgDG,YACpEkB,EAASnB,EACToB,EAAiBjB,EACjBK,EAASH,EACTgB,EAAQd,EACRe,EAAQb,EACRc,EAAWC,EAmNf,IAAAC,EAvJA,SAASC,EAAkBC,EAAGf,GAC7B,IAAID,EACAM,EACAW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMjC,EAAmByB,GACxB,MAAM,IAAIb,UAAWN,EAAQ,4EAA6EmB,IAQ3G,GANAhB,EAAO,CACNE,OAAU,IACVE,UAAa,EACbC,OAAU,EACVC,KAAQ,OAEJmB,UAAUC,OAAS,IACvBR,EAAMN,EAAUZ,EAAMC,IAErB,MAAMiB,EAgCR,OA7BAI,GAAMtB,EAAKE,OAAOF,EAAKK,QAAWL,EAAKE,QAC9B,IACRoB,GAAKtB,EAAKE,QAENM,EAAQQ,IAEXG,EADInB,EAAKK,QAAU,GACZ,EAED,EAGPgB,EAAKrB,EAAKE,OAAS,EACnBkB,EAAMT,EAAOU,GACbE,EAAIP,EAAIK,GAERE,EAAIP,EAAIhB,EAAKE,OAEdoB,GAAK,EACLE,EAAI,EAIJjB,EADAD,EAAO,GACY,YAAkB,IAARa,EAAmBQ,EAAQC,GACxDrB,EAAaD,EAAM,SAAUuB,GAGxBpB,GACJF,EAAaD,EAAMG,EAAgBqB,GAE7BxB,EAQP,SAASsB,IACR,IAAIG,EAEJ,OADAP,GAAK,EACAP,GAAOO,EAAIxB,EAAKM,KACb,CACN0B,MAAQ,IAGVV,GAAK,EAEM,KADXA,GAAKtB,EAAKE,SACMoB,IAAMD,EAErBU,GADAZ,IAAQ,GACEnB,EAAKI,WAEVkB,IAAMF,IAEVD,IAAQ,GAETY,EAAI/B,EAAKI,UAAYM,EAAMa,EAAED,IAAON,EAAEN,EAAMY,EAAED,KAExC,CACNY,MAASF,EACTC,MAAQ,IAUV,SAASL,IAGR,OADAH,GAAK,EACAP,GAAOO,EAAIxB,EAAKM,KACb,CACN0B,MAAQ,IAGVV,GAAK,EAOE,CACNW,MANU,KADXX,GAAKtB,EAAKE,QAELF,EAAKI,UAELJ,EAAKI,UAAYM,EAAMa,EAAED,IAAON,EAAEN,EAAMY,EAAEtB,EAAKE,SAInD8B,MAAQ,IAWV,SAASH,EAAKI,GAEb,OADAhB,GAAM,EACDQ,UAAUC,OACP,CACNO,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASF,IACR,OAAOf,EAAkBC,EAAGhB,KCxL9BkC,EALejD"}