{
  "version": 3,
  "sources": ["../lib/validate.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert-is-nonnegative-number' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude] - peak amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isNonNegativeNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'amplitude', options.amplitude ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isEven = require( '@stdlib/math-base-assert-is-even' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/string-format' );\nvar sinpi = require( '@stdlib/math-base-special-sinpi' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a periodic sinc waveform.\n*\n* ## Method\n*\n* -   The periodic sinc function, or Dirichlet function, is defined as\n*\n*     ```tex\n*     D_N(x; A) = \\begin{cases}\n*     A \\cdot \\frac{\\sin(Nx/2)}{N\\sin(x/2)} & x \\neq 2\\pi k\\ \\textrm{for} k = 0, \\pm 1, \\pm 2, \\pm 3, \\ldots \\\\\n*     A \\cdot (-1)^{k(N-1)} & x = 2\\pi k\\ \\textrm{for} k = 0, \\pm 1, \\pm 2, \\pm 3, \\ldots\n*     \\end{cases}\n*     ```\n*\n*     where, for odd \\\\( N \\\\), the waveform period is \\\\( 2\\pi \\\\), and, for even \\\\( N \\\\), the waveform period is \\\\( 4\\pi \\\\).\n*\n* -   In order to evaluate the periodic sinc function in terms of an iteration number \\\\( t \\\\) and a specified period (period \\\\( \\tau \\\\)), rather than radians, for odd \\\\( N \\\\), we define\n*\n*     ```tex\n*     x = \\frac{2\\pi(t-\\varphi)}{\\tau}\n*     ```\n*\n*     and, for even \\\\( N \\\\), we define\n*\n*     ```tex\n*     x = \\frac{4\\pi(t-\\varphi)}{\\tau}\n*     ```\n*\n*     and substitute accordingly.\n*\n* @param {PositiveInteger} n - order\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a waveform repeats\n* @param {NonNegativeNumber} [options.amplitude=1.0] - peak amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} first argument must be a positive integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterPeriodicSinc( 7 );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterPeriodicSinc( n, options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar sgn;\n\tvar hwf;\n\tvar hw;\n\tvar t;\n\tvar s;\n\tvar i;\n\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\topts = {\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period; // normalize such that t \u03F5 [0,\u03C4]\n\t}\n\tif ( isEven( n ) ) {\n\t\tif ( opts.offset >= 0 ) {\n\t\t\tsgn = -1.0;\n\t\t} else {\n\t\t\tsgn = 1.0;\n\t\t}\n\t\t// Note: when `n` is even, the waveform period (in radians) is 4\u03C0, so we need to adjust the \"period\" parameter to ensure that the waveform repeats within the specified number of iterations:\n\t\thw = opts.period / 2;\n\t\thwf = floor( hw ); // note: \u03C4 could be an odd number; in which case, negative peaks happen \"between\" two iterations (t%\u03C4 and t%(\u03C4+1))\n\t\ts = n / hw;\n\t} else {\n\t\ts = n / opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', ( sgn === void 0 ) ? next2 : next1 );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\tif ( t === 0 || t === hw ) {\n\t\t\tsgn *= -1.0;\n\t\t\tv = sgn * opts.amplitude;\n\t\t} else {\n\t\t\tif ( t === hwf ) {\n\t\t\t\t// We just passed a negative peak, so we need flip the sign in order to ensure that the waveform at `t%\u03C4=0` is the correct sign:\n\t\t\t\tsgn *= -1.0;\n\t\t\t}\n\t\t\tv = opts.amplitude * sinpi(s*t) / ( n*sinpi(t/hw) );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\tt %= opts.period;\n\t\tif ( t === 0 ) {\n\t\t\tv = opts.amplitude;\n\t\t} else {\n\t\t\tv = opts.amplitude * sinpi(s*t) / ( n*sinpi(t/opts.period) );\n\t\t}\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPeriodicSinc( n, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterPeriodicSinc;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a periodic sinc waveform.\n*\n* @module @stdlib/simulate-iter-periodic-sinc\n*\n* @example\n* var iterPeriodicSinc = require( '@stdlib/simulate-iter-periodic-sinc' );\n*\n* var iter = iterPeriodicSinc( 7 );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isInteger", "isPositiveInteger", "isNonNegativeInteger", "isNonNegativeNumber", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "isPositiveInteger", "isEven", "iteratorSymbol", "format", "sinpi", "floor", "validate", "iterPeriodicSinc", "n", "options", "opts", "iter", "FLG", "err", "sgn", "hwf", "hw", "t", "i", "next2", "next1", "end", "factory", "v", "value", "main"]
}
